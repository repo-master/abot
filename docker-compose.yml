version: '3.0'

services:
  # nginx to host frontend
  nginx:
    image: nginx:1.23.4-alpine
    restart: unless-stopped
    volumes:
      # Replace default.conf file with our own
      - ./config/nginx-default.conf:/etc/nginx/conf.d/default.conf
      # Volume used to build frontend (used as document root)
      - build_vol:/app/abot-frontend
    ports:
      - $SERVER_PORT:80
    networks:
      - my-network
    depends_on:
      - frontend

  # Frontend (build-only)
  frontend:
    image: abot/frontend
    build:
      context: ./abot-frontend/
      dockerfile: Dockerfile.prod
      args:
        - "REACT_APP_API_ENDPOINT=$REACT_APP_API_ENDPOINT"
    volumes:
      - build_vol:/app

  # Rasa server
  rasa:
    image: abot/rasa
    environment:
      - TELEGRAM_BOT_TOKEN
      - RASA_ACTION_ENDPOINT
    build:
      context: ./abot-rasa/
      dockerfile: ./Dockerfile.rasa
      args:
        - "ENDPOINTS_FILE=$ENDPOINTS_FILE"
        - "CREDENTIALS_FILE=$CREDENTIALS_FILE"
    networks:
      - my-network
    expose:
      - 5005

  # Actions server
  actions:
    image: abot/actions
    environment:
      BACKEND_ENDPOINT_BASE: ${BACKEND_ENDPOINT_BASE}
    build:
      context: ./abot-rasa/
      dockerfile: ./Dockerfile.actions
    networks:
      - my-network
    expose:
      - 5055

  # Backend for API endpoints and Chatbot model runner
  backend:
    image: abot/backend
    environment:
      - WEB_CONCURRENCY
      - RASA_REST_ENDPOINT_BASE
      - ACTIONS_ENDPOINT_BASE
      - DB_URI
    build:
      context: ./abot-backend/
      dockerfile: ./Dockerfile.prod
    ports:
      - "$BACKEND_PORT:8080"
    expose:
      - 8080
    networks:
      - my-network
    depends_on:
      - postgres

  # Postgres Database
  postgres:
    image: postgres:15.2
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - "$POSTGRES_PORT:5432"
    expose:
      - 5432
    networks:
      - my-network

volumes:
  build_vol:

networks:
  my-network:
